<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.schic.schie.modules.exbatchlog.dao.ExBatchLogDao">
    
	<sql id="exBatchLogColumns">
					a.id AS "id",
					a.job_log_id AS "jobLogId",
					a.res_askid AS "resAskid",
					a.res_name AS "resName",
					a.resask_companyname AS "resaskCompanyname",
					a.is_err AS "isErr",
					a.errmsg AS "errmsg",
					a.src_rows AS "srcRows",
					a.src_exe_begintime AS "srcExeBegintime",
					a.src_exe_endtime AS "srcExeEndtime",
					a.src_isend AS "srcIsend",
					a.src_exe_costtime AS "srcExeCosttime",
					a.tar_exe_begintime AS "tarExeBegintime",
					a.tar_exe_endtime AS "tarExeEndtime",
					a.tar_exe_costtime AS "tarExeCosttime",
					a.tar_rows_update AS "tarRowsUpdate",
					a.tar_rows_insert AS "tarRowsInsert",
					a.tar_rows_ignore AS "tarRowsIgnore",
					a.create_date AS "createDate"
	</sql>

	<sql id="exBatchLogColumnsList">
					a.id AS "id",
					a.job_log_id AS "jobLogId",
					a.res_askid AS "resAskid",
					a.res_name AS "resName",
					a.resask_companyname AS "resaskCompanyname",
					a.is_err AS "isErr",
					a.errmsg AS "errmsg",
					a.src_rows AS "srcRows",
					a.src_exe_begintime AS "srcExeBegintime",
					a.src_exe_endtime AS "srcExeEndtime",
					a.src_isend AS "srcIsend",
					a.src_exe_costtime AS "srcExeCosttime",
					a.tar_exe_begintime AS "tarExeBegintime",
					a.tar_exe_endtime AS "tarExeEndtime",
					a.tar_exe_costtime AS "tarExeCosttime",
					a.tar_rows_update AS "tarRowsUpdate",
					a.tar_rows_insert AS "tarRowsInsert",
					a.tar_rows_ignore AS "tarRowsIgnore",
					a.create_date AS "createDate"
	</sql>

	<sql id="exBatchLogJoins">
	</sql>

	<sql id="exBatchLogWhere">
		<if test="id != null and id != ''">
			AND a.id = #{id}
		</if>
		<if test="jobLogId != null and jobLogId != ''">
			AND a.job_log_id = #{jobLogId}
		</if>
		<if test="resAskid != null and resAskid != ''">
			AND a.res_askid = #{resAskid}
		</if>
		<if test="resName != null and resName != ''">
			AND a.res_name LIKE
			<if test="dbName == 'oracle' or dbName == 'postgresql'">'%'||#{resName}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{resName}+'%'</if>
			<if test="dbName == 'mysql'">concat('%',#{resName},'%')</if>
		</if>
		<if test="resaskCompanyname != null and resaskCompanyname != ''">
			AND a.resask_companyname LIKE
			<if test="dbName == 'oracle' or dbName == 'postgresql'">'%'||#{resaskCompanyname}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{resaskCompanyname}+'%'</if>
			<if test="dbName == 'mysql'">concat('%',#{resaskCompanyname},'%')</if>
		</if>
		<if test="isErr != null and isErr != ''">
			AND a.is_err = #{isErr}
		</if>
		<if test="srcRows != null and srcRows != ''">
			AND a.src_rows = #{srcRows}
		</if>
		<if test="srcIsend != null and srcIsend != ''">
			AND a.src_isend = #{srcIsend}
		</if>
		<if test="srcExeCosttime != null and srcExeCosttime != ''">
			AND a.src_exe_costtime = #{srcExeCosttime}
		</if>
		<if test="tarExeCosttime != null and tarExeCosttime != ''">
			AND a.tar_exe_costtime = #{tarExeCosttime}
		</if>
		<if test="tarRowsUpdate != null and tarRowsUpdate != ''">
			AND a.tar_rows_update = #{tarRowsUpdate}
		</if>
		<if test="tarRowsInsert != null and tarRowsInsert != ''">
			AND a.tar_rows_insert = #{tarRowsInsert}
		</if>
		<if test="tarRowsIgnore != null and tarRowsIgnore != ''">
			AND a.tar_rows_ignore = #{tarRowsIgnore}
		</if>
		<if test="beginCreateDate != null">
			AND a.create_date &gt;= #{beginCreateDate}
		</if>
		<if test="endCreateDate != null ">
			AND a.create_date &lt;= #{endCreateDate}
		</if>
	</sql>

	<select id="get" resultType="ExBatchLog">
		SELECT 
			<include refid="exBatchLogColumns"/>
		FROM ex_batch_log a
		<include refid="exBatchLogJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ExBatchLog">
		SELECT 
			<include refid="exBatchLogColumnsList"/>
		FROM ex_batch_log a
		<include refid="exBatchLogJoins"/>
		<where>
			1=1
			<include refid="exBatchLogWhere"/>
		</where>
		<choose>
			<when test="where !=null and where != ''">
				AND ${where}
			</when>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date desc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ExBatchLog">
		SELECT 
			<include refid="exBatchLogColumnsList"/>
		FROM ex_batch_log a
		<include refid="exBatchLogJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO ex_batch_log(
			id,
			job_log_id,
			res_askid,
			is_err,
			errmsg,
			res_name,
			resask_companyname,
			src_rows,
			src_exe_begintime,
			src_exe_endtime,
			src_isend,
			src_exe_costtime,
			tar_exe_begintime,
			tar_exe_endtime,
			tar_exe_costtime,
			tar_rows_update,
			tar_rows_insert,
			tar_rows_ignore,
			create_date
		) VALUES (
			#{id},
			#{jobLogId},
			#{resAskid},
			#{isErr},
			#{errmsg},
			#{resName},
			#{resaskCompanyname},
			#{srcRows},
			#{srcExeBegintime},
			#{srcExeEndtime},
			#{srcIsend},
			#{srcExeCosttime},
			#{tarExeBegintime},
			#{tarExeEndtime},
			#{tarExeCosttime},
			#{tarRowsUpdate},
			#{tarRowsInsert},
			#{tarRowsIgnore},
			#{createDate}
		)
	</insert>

	<select id="findUniqueByProperty" resultType="ExBatchLog" statementType="STATEMENT">
		select * FROM ex_batch_log  where ${propertyName} = '${value}'
	</select>

	<select id="total" resultType="ExBatchLog">
		SELECT
			<choose>
				<when test=" totalType != null and totalType != ''">
					DATE_FORMAT(a.create_date,'${totalType}') as totalDate,
				</when>
				<otherwise>
				 </otherwise>
			</choose>
			sum(src_rows) as totalCount
		FROM
			ex_batch_log a
		<where>
			1=1
			<include refid="exBatchLogWhere"/>
		</where>
		<choose>
			<when test=" groupBy != null and groupBy != '' and totalType != null and totalType != '' ">
				GROUP BY DATE_FORMAT(a.create_date,'${totalType}'),${groupBy}
			</when>
			<when test=" groupBy != null and groupBy != ''">
				GROUP BY ${groupBy}
			</when>
			<when test=" totalType != null and totalType != ''">
				GROUP BY DATE_FORMAT(a.create_date,'${totalType}')
			</when>
			<otherwise>
			 </otherwise>
		</choose>
		<choose>
			<when test=" orderBy != null and orderBy != ''">
				ORDER BY ${orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
</mapper>